name: Arma

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_extension:
    strategy:
      matrix:
        arrays: [
          os: { tag: "ubuntu-latest", ext: ".so", target: "i686-unknown-linux-gnu" },
          os: { tag: "ubuntu-latest", ext: ".so", target: "x86_64-unknown-linux-gnu" },
          os: { tag: "windows-latest", ext: ".dll", target: "i686-pc-windows-msvc" },
          os: { tag: "windows-latest", ext: ".dll", target: "x86_64-pc-windows-msvc" },
        ]
    runs-on: ${{ matrix.arrays.os.tag }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Install latest
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.arrays.os.target }}
          toolchain: stable
      - name: Cargo Build
        run: cd extension && cargo build --release
      - name: Tree
        run: tree
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.arrays.os.tag }}
          path: target/${{ matrix.arrays.os.target }}/release/dynulo_pmc${{ matrix.arrays.os.ext }}
          if-no-files-found: error
          retention-days: 30
  package:
    needs: build_extension
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      
      - uses: actions/download-artifact@v2
        with:
          name: i686-unknown-linux-gnu
      - run: mv i686-unknown-linux-gnu dynulo_pmc.so
      
      - uses: actions/download-artifact@v2
        with:
          name: x86_64-unknown-linux-gnu
      - run: mv x86_64-unknown-linux-gnu dynulo_pmc_x64.so
      
      - uses: actions/download-artifact@v2
        with:
          name: i686-pc-windows-msvc
      - run: mv i686-pc-windows-msvc dynulo_pmc.dll
      
      - uses: actions/download-artifact@v2
        with:
          name: x86_64-pc-windows-msvc
      - run: mv x86_64-pc-windows-msvc dynulo_pmc_x64.dll

      - name: Set VERSION env
        run: echo VERSION=${GITHUB_REF:11} >> $GITHUB_ENV
      - name: Build addon with HEMTT
        uses: arma-actions/hemtt@master
        with:
          command: 'build --release'
      - uses: actions/upload-artifact@v2
        with:
          name: armapmc.zip
          path: 'releases/pmc_${{ env.VERSION }}.zip'
